basePath: /
definitions:
  controllers.ApiError:
    properties:
      error_message:
        type: string
    type: object
  repository.Recipe:
    properties:
      created_at:
        type: string
      id:
        type: string
      ingredients:
        items:
          type: string
        type: array
      instructions:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
host: http://go-kitchen-app-1954036813.ap-northeast-1.elb.amazonaws.com
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample API for managing recipes.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Go Recipe API
  version: "1.0"
paths:
  /v1/recipes:
    get:
      description: Get a list of all recipes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/repository.Recipe'
            type: array
      summary: Get all recipes
      tags:
      - recipes
    post:
      consumes:
      - application/json
      description: Insert a new recipe record
      parameters:
      - description: Recipe data
        in: body
        name: recipe
        required: true
        schema:
          $ref: '#/definitions/repository.Recipe'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/repository.Recipe'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ApiError'
      summary: Create a new recipe
      tags:
      - recipes
  /v1/recipes/{id}:
    delete:
      description: Remove a recipe by ID
      parameters:
      - description: Recipe ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/controllers.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ApiError'
      summary: Delete a recipe
      tags:
      - recipes
    get:
      description: Retrieve a specific recipe using its ID
      parameters:
      - description: Recipe ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.Recipe'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ApiError'
      summary: Get a recipe by ID
      tags:
      - recipes
    put:
      consumes:
      - application/json
      description: Update an existing recipe by ID
      parameters:
      - description: Recipe ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated recipe data
        in: body
        name: recipe
        required: true
        schema:
          $ref: '#/definitions/repository.Recipe'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.ApiError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ApiError'
      summary: Update a recipe
      tags:
      - recipes
swagger: "2.0"
